Servlet to Servlet Communication
==================================
Servlet to servlet communication is also known as servlet chaining.

Servlet to servlet communication is possible by using three ways.

1) Forwarding the request 
				
2) Including the response 

3) Send Redirection

1)Forwarding the request 
-------------------------
In forwarding the request , output of source servlet program will be discarded and output 
of destination servlet program goes to browser window as response.

To forward the request we need to use RequestDispatcher object.

We can create RequestDispatcher object as follow.
ex:
	RequestDispatcher rd=req.getRequestDispatcher(url-pattern);
	rd.forward(req,res);

2)Including the response 
------------------------
In including the response, output of source servlet program and output of destination 
servlet program goes to browser window as response.

In source servlet program output will be added but not code.

To perform including the response we need to use RequestDispatcher object.

We can create RequestDispatcher object as follow.
ex:
	RequestDispatcher rd=req.getRequestDispatcher(url-pattern);
	rd.include(req,res);




Deployment Directory structure
------------------------------
STSApp1
|
|---Java Resources
|	|
	|------src
		|
		|---TestSrv1.java
		|---TestSrv2.java
|
|---Web Content
	|
	|------index.html
	|
	|------WEB-INF
		|
		|-----web.xml 

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.html
-----------
<form action="test1" method="GET">

	UserName: <input type="text" name="t1"/> <br>
	
	Password: <input type="password" name="t2"/> <br>
	
	<input type="submit" value="login"/>

</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String uname=req.getParameter("t1");
		String pwd=req.getParameter("t2");
		
		if(pwd.equals("admin"))
		{
			RequestDispatcher rd=req.getRequestDispatcher("test2");	
			rd.forward(req, res);
		}
		else
		{
			pw.println("<b style='color:red'>Sorry! Incorrect username or password</b>");
			RequestDispatcher rd=req.getRequestDispatcher("index.html");
			rd.include(req, res);
		}
	}
}

TestSrv2.java
--------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<center><h1>Login Successfully...</h1></center>");
		
		pw.close();
	}

}

Request url
----------
	http://localhost:2525/STSApp1/


3)Send Redirection 
=====================
It will forward the request to the application which is present in same server or different server.

To forward the request we need to use sendRedirect() method of HttpServletResponse object.
ex:
	res.sendRedirect(url);

It always sends a new request.

It works within the server or output side the server.

It uses browser window to forward a new request.


Deployment Directory structure
------------------------------
STSApp2
|
|---Java Resources
|	|
	|------src
		|
		|---TestSrv.java
|
|---Web Content
	|
	|------index.html
	|
	|------WEB-INF
		|
		|-----web.xml 

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.html
----------
<center>
	<h1>
	<a href="test?t1=flights">Flights</a>  &nbsp;&nbsp;&nbsp;&nbsp;
	<a href="test?t1=hotels">Hotels</a>   &nbsp;&nbsp;&nbsp;&nbsp;
	<a href="test?t1=railways">Trains</a>   &nbsp;&nbsp;&nbsp;&nbsp;
	</h1>
</center>

web.xml
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
</web-app>

TestSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading the data
		String value=req.getParameter("t1");
		
		res.sendRedirect("https://www.makemytrip.com/"+value);
		
		pw.close();
	}
}

Request url
------------
	http://localhost:2525/STSApp2/




Q)How to enable <load-on-startup> and what happens if we enable <load-on-startup> ?

We can enable <load-on-startup> inside web.xml file.

web.xml
------
	--
	--
	<servlet>
  		<servlet-name>TestSrv</servlet-name>
  		<servlet-class>com.ihub.www.TestSrv</servlet-class>
		<load-on-startup>1</load-on-startup>
  	</servlet>
  	--
	--	

If we enable <load-on-startup> then our servlet container will create servlet program during the server startup or during the deployment of web application.


Q)How many scopes are there in servlet?

There are three scopes in servlets.

1) Request scope 

2) Session scope 

3) Application scope 


Stateless Behaviour Of Web Application
=======================================
Diagram: servlet6.1

Above diagram demostrate on stateless behaviour of web application.

Our HTTP protocol is stateless which makes our web application stateless.

In stateless web application no web resource programs can access previous request data while processing the current request.

To overcome this limitation we need to Session Tracking.


Deployment Directory structure
------------------------------
StatelessApp
|
|---Java Resources
|	|
	|------src
		|
		|---TestSrv1.java
		|---TestSrv2.java
|
|---Web Content
	|
	|------form.html
	|
	|------WEB-INF
		|
		|-----web.xml 

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="test1"  method="GET">
	
	Name: <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial status : 
	<input type="checkbox" name="t3" value="married"/> MARRIED 
	<input type="checkbox" name="t3" value="single"/> SINGLE
	<br>
	
	<input type="submit" value="submit"/> 
	
</form>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
   <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  	<load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>

	<welcome-file-list>
		<welcome-file>form.html</welcome-file>
	</welcome-file-list>  
  
</web-app>

TestSrv1.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/><br>");
			pw.println("No of Child : <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/><br>");
			pw.println("Why will u marry : <input type='text' name='f2t2'/><br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form1  data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		//reading form2  data
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
				
		pw.println("Form 1 Data : "+name+" "+fname+" "+ms+"<br>");
		pw.println("Form 2 Data : "+val1+" "+val2+"<br>");
		
		pw.close();
	}
}
Request url
--------
	http://localhost:2525/StatelessApp/


Session
========
The process of continue and related operations performed on web application with multiple request and response is called session.
ex:
	starting of java class and ending of java class is one session.
	Login in gmail and logout from gmail is one session.


Session Tracking / Session Management
=====================================
Session tracking is used to make our web application as statefull web application inspite of our HTTP protocol is stateless.

In stateless web application no web resource program can access previous request data while processing the current request during a session.

In statefull web application web resource program can access previous request data while processing the current request during a session.

There are four techniques to perform session tracking.

1)By using hidden box fields

2)HttpCookies 

3)HttpSession with Cookies

4)URL rewriting 


3)HttpSession with Cookies
-------------------------
In HttpSession with cookies, for every request it will create a unique session id.

Our web container uses that session id to identify a user is a new user or existing user.

HttpSession object we can use to perform following task.

1)Bind the objects

2)To manipuate the data in HttpSession object.

Diagram:servlet6.2

Deployment Directory structure
----------------------------
SessionApp
|
|-----Java Resources
|	|
	|-----src
		|
		|---com.ihub.www
			|
			|----TestSrv1.java
			|----TestSrv2.java
|-----Web Content
|	|
	|-----form.html
	|
	|-----WEB-INF
		|
		|---web.xml
Note:
------
In above application we need to add "servlet-api.jar" file in project build path.



index.html
----------
<form action="test1" method="GET">

	Name : <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial status : 
	<input type="checkbox" name="t3" value="married"/> MARRIED  
	<input type="checkbox" name="t3" value="single"/> SINGLE 
	<br>
	
	<input type="submit" value="submit"/>

</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>	  
  
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv1 extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		HttpSession session=req.getSession(true);
		session.setAttribute("pname",name );
		session.setAttribute("pfname",fname );
		session.setAttribute("pms",ms);
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/> <br> ");
			pw.println("No of Child : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/> <br> ");
			pw.println("Why will u marry : <input type='text' name='f2t2'/> <br> ");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
	}
}

TestSrv2.java
--------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form 1 data
		HttpSession session=req.getSession(false);
		String name=(String)session.getAttribute("pname");
		String fname=(String)session.getAttribute("pfname");
		String ms=(String)session.getAttribute("pms");
		
		//reading form 2 data 
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form 1 Data  : "+name+" "+fname+" "+ms+"<br>");
		pw.println("Form 2 Data  : "+val1+" "+val2+"<br>");
		
		pw.close();
		
	}
}

Request url
-------
	http://localhost:2525/SessionApp/


	





























































































































































































 